package server;

import java.io.*;
import java.net.*;

public class server_main {
	public static void main(String[] args) {
		ServerSocket providerSocket; 
		Socket connection = null;
		ObjectOutputStream out; 
		ObjectInputStream in; 
		boolean connectionFlag;
		String key;
	    
	                    
		
		
		try{
			providerSocket = new ServerSocket(2004, 10); 
			connection = providerSocket.accept(); 
			out = new ObjectOutputStream(connection.getOutputStream()); 
			out.flush(); 
			in = new ObjectInputStream(connection.getInputStream());
			
			connectionFlag = connection.isConnected();
			
			while(key.equals("OFF")) {
				if(connectionFlag == true) {
					key = in.readObject();
					
					switch(key) {
					case "SUC":
						SUC();
						break;
					case "SUR":
						SUR();
						break;
					case "SUU":
						SUU();
						break;
					case "SUD":
						SUD();
						break;
					case "GCC":
						GCC();
						break;
					case "GGR":
						GGR();
						break;
					case "GGU":
						GGU();
						break;
					case "GGD":
						GGD();
						break;
					case "FRC":
						FRC();
						break;
					case "FRR":
						FRR();
						break;
					case "FRU":
						FRU();
						break;
					case "FRD":
						FRD();
						break;
					}
					
				}
				
				
			}
		}catch(IOException ioException){
				ioException.printStackTrace();
		}
			finally{
				
				try{
					in.close();
					out.close();
					providerSocket.close();
				}catch(IOException ioException){
					ioException.printStackTrace();
				}
			}
		}
	void SUC() {
		
	}
	void SUR() {
		
	}
	void SUU() {
		
	}
	void SUD() {
		
	}
	void GGR() {
		
	}
	void GGU() {
		
	}
	void GGD() {
		
	}
	void FRC() {
		
	}
	void FRR() {
		
	}
	void FRU() {
		
	}
	void FRD() {
		
	}
		
		
		
	}
